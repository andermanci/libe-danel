

<nav id="navbar" class="sticky top-0 z-50 bg-white w-full border-gray-200 shadow-[0px_2px_3px_-1px_rgba(0,0,0,0.1),0px_1px_0px_0px_rgba(25,28,33,0.02),0px_0px_0px_1px_rgba(25,28,33,0.08)]">
    <div class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4">
      <a href="https://flowbite.com/" class="flex items-center space-x-3 rtl:space-x-reverse">
          <span class="self-center text-4xl whitespace-nowrap">L & D</span>
      </a>
      <button id="triggerEl" type="button" class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200" aria-expanded="false">
          <span class="sr-only">Abrir menu</span>
          <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 17 14">
              <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h15M1 7h15M1 13h15"/>
          </svg>
      </button>
      <div class="hidden w-full md:block md:w-auto" id="targetEl">
        <ul class="text-lg font-medium flex flex-col p-4 md:p-0 mt-4 border border-gray-100 rounded-lg bg-gray-50 md:flex-row md:space-x-8 rtl:space-x-reverse md:mt-0 md:border-0 md:bg-white">
          <li>
            <a href="#hero" class="anchor-option font-thin block py-2 px-3 rounded text-white bg-primary md:bg-transparent md:text-primary md:p-0" aria-current="page">Inicio</a>
          </li>
          <li>
            <a href="#countdown" class="anchor-option font-thin block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-primary md:p-0">Contador</a>
          </li>
          <li>
            <a href="#invitation" class="anchor-option font-thin block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-primary md:p-0">Invitación</a>
          </li>
          <li>
            <a href="#address" class="anchor-option font-thin block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-primary md:p-0">Dirección</a>
          </li>
          <li>
            <a href="#gallery" class="anchor-option font-thin block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-primary md:p-0">Galería</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>
  
  <script>
    // set the target element that will be collapsed or expanded (eg. navbar menu)
    const $targetEl = document.getElementById("targetEl");
  
    // optionally set a trigger element (eg. a button, hamburger icon)
    const $triggerEl = document.getElementById("triggerEl");

    const $triggerAnchors = document.getElementsByClassName("anchor-option");
  
    // optional options with default values and callback functions
    const options = {
      onCollapse: () => {
        console.log("element has been collapsed");
      },
      onExpand: () => {
        console.log("element has been expanded");
      },
      onToggle: () => {
        console.log("element has been toggled");
      },
    };
  
    import { Collapse } from "flowbite";
  
    const collapse = new Collapse($targetEl, $triggerEl, options);

    const navbarHeight = document.getElementById('navbar')?.offsetHeight ?? 0;
    console.log({navbarHeight});

    function handleClick(event: any) {
      event.preventDefault(); // Prevenir la acción por defecto del enlace

      collapse.collapse();
      
      // Obtener el objetivo del enlace
      const targetId = event.target.getAttribute('href').substring(1);
      const targetElement = document.getElementById(targetId);

      // Calcular la posición de destino ajustada
      const targetPosition = targetElement!.getBoundingClientRect().top + window.pageYOffset - navbarHeight;

      // Hacer scroll suave a la posición de destino ajustada
      window.scrollTo({
          top: targetPosition,
          behavior: 'smooth'
      });
    }

    Array.from($triggerAnchors).forEach(anchor => {
        anchor.addEventListener('click', handleClick);
    });
  </script>